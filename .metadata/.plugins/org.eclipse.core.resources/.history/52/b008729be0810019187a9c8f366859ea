#include <string.h>
#include <omnetpp.h>

using namespace omnetpp;

class  Txc : public cSimpleModule
{
    private:
        int counter;
        cMessage* event;
        cMessage* tictocMsg;
        cMessage* timeout;
        simtime_t tout;


    protected:
        virtual void initialize() override;
        virtual void handleMessage(cMessage *msg) override;
};

Define_Module(Txc);

void Txc::initialize()
{
    event = new cMessage("event");
    timeout = new cMessage("timeout");

    if(par("sendMsgOnInit").boolValue() == true){
        tictocMsg = new cMessage("tictocMsg");
        EV << "Sending initial message\n";
        send(tictocMsg, "out");
    }
    counter = par("limit");
    WATCH(counter);

    tout = 3.0;
}

void Txc::handleMessage(cMessage *msg){


    if(msg == event){
        EV << "Received message " << tictocMsg->getName() << ", sending it out again\n";
        send(tictocMsg, "out");
        counter--;
        scheduleAt(simTime() + tout, timeout);
    }if(msg == timeout) {
        send(new cMessage("tictocMsg"), "out");
        scheduleAt(simTime() + tout, timeout);
    }else{
        if(uniform(0, 1) < 0.1){
            EV << "Losing Message";
            delete msg;
            bubble("Lost the message");
        }else{
            EV << "Sending delay signal";
            cancelEvent(timeout);
            tictocMsg = msg;
            simtime_t delay = par("delay");
            scheduleAt(simTime()+delay, event);
        }
    }
}
